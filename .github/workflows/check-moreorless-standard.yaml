on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main


name: R CMD Check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macOS-latest, r: 'devel'}
          - {os: macOS-latest, r: 'release'}
          - {os: windows-latest, r: 'devel'}
          - {os: windows-latest, r: 'release'}
          - {os: windows-latest, r: 'oldrel'}
          - {os: ubuntu-20.04, r: 'devel'}
          - {os: ubuntu-20.04, r: 'release'}
          - {os: ubuntu-20.04, r: 'oldrel'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      _R_CHECK_DONTTEST_EXAMPLES_: false
      CRAN: ${{ matrix.config.cran }}

    steps:
      - uses: actions/checkout@v2
      
      - uses: r-lib/actions/setup-pandoc@v2-branch

      - uses: r-lib/actions/setup-r@v2-branch
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2-branch
        with:
          extra-packages: rcmdcheck
          
      - uses: r-lib/actions/check-r-package@v2-branch
#        with:
#          args: '"--as-cran"'
# ===== fro all above see => https://github.com/r-lib/actions/blob/v2-branch/.github/workflows/check-full.yaml


      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash
          
      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check

      - name: Test coverage
        if: matrix.config.os == 'macOS-latest' && matrix.config.r == 'release'
        run: |
          remotes::install_cran("covr")
          covr::codecov(token = "${{secrets.CODECOV_TOKEN}}")
        shell: Rscript {0}
    
      - name: Build website 
        if: matrix.config.os == 'ubuntu-20.04' && matrix.config.r == 'release'
        run: |
          sudo apt-get install libcurl4-openssl-dev libharfbuzz-dev libfribidi-dev
          Rscript -e 'remotes::install_cran(c("pkgdown")); pkgdown::build_site()'
          git fetch origin gh-pages:gh-pages
          git --work-tree=docs checkout gh-pages -- .
            
      - name: Deploy website 
        if: matrix.config.os == 'ubuntu-20.04' && matrix.config.r == 'release'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.PKGDOWN_TOKEN }}
          publish_dir: ./docs