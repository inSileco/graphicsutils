# Workflow derived from https://github.com/r-lib/actions/tree/master/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: master
  pull_request:
    branches: master

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - { os: macOS-latest, r: "release" }
          - { os: windows-latest, r: "release" }
          - { os: ubuntu-22.04, r: "devel" }
          - { os: ubuntu-22.04, r: "release" }
          - { os: ubuntu-20.04, r: "oldrel" }

      env:
        R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
        _R_CHECK_DONTTEST_EXAMPLES_: false
        CRAN: ${{ matrix.config.cran }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: rcmdcheck

      - uses: r-lib/actions/check-r-package@v2

      - name: Test coverage
        if: matrix.config.os == 'ubuntu-22.04' && matrix.config.r == 'release'
        run: |
          remotes::install_cran("covr")
          covr::codecov(token = "${{secrets.CODECOV_TOKEN}}")
        shell: Rscript {0}

      - name: Build website
        if: matrix.config.os == 'ubuntu-21.04' && matrix.config.r == 'release'
        run: |
          sudo apt-get install libcurl4-openssl-dev libharfbuzz-dev libfribidi-dev
          Rscript -e 'remotes::install_cran(c("pkgdown")); pkgdown::build_site()'
          git fetch origin gh-pages:gh-pages
          git --work-tree=docs checkout gh-pages -- .

      - name: Deploy website
        if: matrix.config.os == 'ubuntu-22.04' && matrix.config.r == 'release'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.PKGDOWN_TOKEN }}
          publish_dir: ./docs

      - name: Good practices
        if: matrix.config.os == 'ubuntu-22.04' && matrix.config.r == 'release'
        run: |
          goodpractice::gp(checks = c(
            "cyclocomp",
            "no_import_package_as_a_whole",
            "no_export_pattern"
          ))
        shell: Rscript {0}
